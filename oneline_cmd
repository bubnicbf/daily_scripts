################## networking ##################
# system route table
# Routing tables
#
# Internet:
# Destination        Gateway            Flags        Refs      Use   Netif Expire
# default            192.168.1.1        UGSc          107        0     en0
# 127                127.0.0.1          UCS             0        0     lo0
# 127.0.0.1          127.0.0.1          UH              8     5362     lo0
# 169.254            link#4             UCS             0        0     en0
# 192.168.1          link#4             UCS             0        0     en0
# 192.168.1.1/32     link#4             UCS             1        0     en0
# 192.168.1.1        ec:88:8f:2d:d4:74  UHLWIir       110       24     en0   1169
# 192.168.1.106/32   link#4             UCS             0        0     en0
#
#
# Kernel IP routing table
# Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
# 10.103.11.0     0.0.0.0         255.255.255.0   U         0 0          0 eth0
# 169.254.0.0     0.0.0.0         255.255.0.0     U         0 0          0 eth0
# 10.0.0.0        10.103.11.254   255.0.0.0       UG        0 0          0 eth0
#
# Flags: U Indicates route is up;
#        G Route is to a gateway;
#        H Route is to a host and not a network;
#        M Table entry is modified by ICMP redirect message;
#        D Route was created dynamically or by ICMP redirect;
netstat -nr

# display network and route
ip route show
ip ro add 10.0.0.0/8 via 10.11.11.254

# add/del vip on local dev(lo:14)
/sbin/ifconfig lo:14 10.11.18.14 broadcast 10.11.18.14 netmask 0xffffffff up && /sbin/route add -host 10.11.18.14 dev lo:14
ip addr del 10.11.18.14/32 dev lo:14

#config initcwnd and initrwnd
ip route | while read p; do echo "ip route change $p initcwnd 10 initrwnd 10"; done

#iptables
#iptables [-t table] command [match] [target/jump]
# -t --table: table(filter, nat, mangle, raw)
# -A -D -I -R: chain  -L,--lsit,-F,--flush,-Z,-N,-X,-P,-E
# match regx: tcp,udp,icmp,limit,mac,mark,owner,state,tos,ttl
# -j target:(ACCEPT, DROP, REJECT)
iptables -A INPUT -p tcp --dport 80 -m time --timestart 09:00 --timestop 18:00 -j DROP
iptables -A INPUT -s 192.168.1.0/24 -p tcp --dport 22 -j ACCEPT
iptables -t filter -A INPUT -s 192.168.1.1 -j DROP

#------------- network monitoring --------------
#iptraf | tcpdump | tcpflow | ss | netstat
iptraf

#tcpdump
#tcpdump [ -AdDeflLnNOpqRStuUvxX ] [ -c count ]
#        [ -C file_size ] [ -F file ]
#        [ -i interface ] [ -m module ] [ -M secret ]
#        [ -r file ] [ -s snaplen ] [ -T type ] [ -w file ]
#        [ -W filecount ]
#        [ -E spi@ipaddr algo:secret,...  ]
#        [ -y datalinktype ] [ -Z user ]
#        [ expression ]
# expression (type:net,host,port) (dir:src,dst,src and dst, src or dst) (proto)
#
tcpdump tcp and src 192.168.0.1 and port 80
# 0x4745 : [GE]T -- 0x4854 : [HT]TP
tcpdump  -XvvennSs 0 -i eth0 tcp[20:2]=0x4745 or tcp[20:2]=0x4854
tcpdump  -XvvnnSs 0 -i any host 10.10.0.20 and port 389
tcpdump -i eth0 port 80 -w -
tcpdump -nnvXSs 0 -c2 icmp
# wireshark filter
# tcp.srcport == 54471 or tcp.dstport == 54471
# tcp.flags.reset == 1

#tcpflow
tcpflow -cp -i eth0 "port 80"

# one line cmd display tcp/ip info.
ss --options --extended --memory --processes --info
ss -an | grep "TIME-WAIT" | awk '{print $NF}' | grep -P "^(\d+\.){3}(\d+):\d+$" | grep -oP "(\d+\.){3}(\d+)" | sort | uniq -c
ss --info  sport = :2112 dport = :4057
ss -tan 'sport = :80' | awk '{print $(NF)" "$(NF-1)}' | sed 's/:[^ ]*//g' | sort | uniq -c

# one line cmd for static state of tcp/ip.
netstat -tanl
netstat -pant | awk '/^tcp/ {++state[$6]} END {for(key in state) printf("%-10s\t%d\n", key,state[key])}'

#check smp_affinity:
#  Ethernet controller
#     MSI-X: Enable+ Count=9 Masked-  (Enable+ and Count > 1)
lspci -vvv | less

#check ring buffer
ethtool -g eth0
#check net interface offloading
ethtool -k eth0         #look option
ethtool -K eth0 tso off #set option

#ifconfig
ifconfig eth0 mtu 1500
ifconfig eth0 down
ifconfig eth0 up

#dig command usage.
dig [@server] domain [query-type] [query-class] [+query-option] [-dig-option] [%comment]
#lookup dns use local dns service 8.8.8.8
dig www.google.com @8.8.8.8

#get version of bind
dig @8.8.8.8 version.bind chaos txt
#hide bind version option in named.conf
#option {
#    version "I don't tell you my version.";
#};

nslookup [-option...] [host-to-find | - [server]]

named-checkconf [-jvz] [-t directory] [filename]

################## kernel compile ##################
# BIOS  -> MBR
#          grub  -> kernel(bzImage) /boot/vmlinuz-3.2.0-74-generic-pae
#                -> initrd.img      /boot/initrd.img-3.2.0-74-generic-pae
#                   initrd.img: some drivers and kernel module
#### compile a new kernel from source code
#get a template .config file
cp config-3.2.0-74-generic-pae .config
#run make menuconfig need some package: ncurses-devel
#(ubuntu:sudo apt-get install libncurses5-dev)
#modify the .config file
make menuconfig
#compile the kernel
make bzImage
#compile the modules
make modules
make modules_install
#install kernel: cp arch/i386/boot/bzImage /boot/vmlinuz-xxx && mkinitrd /boot/initrd-xxx.img  xxx && vi /boot/grub/grub.conf
make install


############# command ##################
# one line cmd display dir file.
ls -lR | grep -v total | awk 'BEGIN { OFS="\t"; ORS="\n-->"} {print $1,$3,$NF}'

# find failure of soft links
find . -type l | perl -lne 'print if ! -e'

# sort filename by column 1
sort -k1,1n filename

#static memory for process
ps -eo fname,rss | awk '{arr[$1]+=$2} END {for (i in arr) {print i,arr[i]}}' | sort -k2 -nr | column -t

#RAID0
mdadm -C /dev/md0 -a yes -l 0 -n 2 /dev/sdb /dev/sdc
mdadm -D --scan > /etc/mdadm.conf
mkfs.ext4 /dev/md0
mount /dev/md0 /mnt

#mdadm -C /dev/md0 -a yes -l 1 -n 2 /dev/sdb /dev/sdc
#mdadm -C /dev/md0 -a yes -l 5 -n 3 /dev/sdb /dev/sdc /dev/sdd
#mdadm -C /dev/md0 -a yes -l 5 -n 3 -x 1 /dev/sdb /dev/sdc /dev/sdd /dev/sde
#-x 1: /dev/sde is backup disk when error happen.
#mdadm -C /dev/md0 -a yes -l 6 -n 4 /dev/sdb /dev/sdc /dev/sdd /dev/sde

#mysql
#mysql -u* -h* -p -P3306 -e "show databases" | sed -n '2,$p' | xargs -l DB 'mysqldump DB > DB.sql';
#mysqldump --add-drop-table -uroot -p nowait > backupfile.sql
#mysql -uroot --default-character-set=utf8 -p
#
#alter table ip add index idx_ip(ip);

#look for system perfermace.
#cmd interval count
vmstat 2 10
iostat 2 10
mpstat 2 10
slabtop
slabtop -o | grep -E '(^  OBJS|tw_sock_TCP|tcp_bind_bucket)'

## sar usage
sar
# read sar statistic data from file /var/log/sa/sa01
sar -r -n DEV -f /var/log/sa/sa01
sar -r -n SOCK -f /var/log/sa/sa01

##### strace - trace system calls and signals
#trace network syscall for a existed PID.
strace -p $PID -f -e trace=network -s 10000

# get trace all function call.
strace -p $PID
# get statistic time usage.
strace -cp $PID
# trace clone func call
strace -T -e clone -p $PID

##### ltrace - a library call tracer
ltrace -cp $PID

tr -c "[:digit:]" " " < /dev/urandom | dd cbs=$COLUMNS conv=unblock | GREP_COLOR="1;32" grep --color "[^ ]"
#display one line '#' with screen width
printf "%`tput cols`s" | tr ' ' '#'

#install django use douban mirror.
pip install django --index-url http://pypi.douban.com/simple

# (?=exp)  pre match
# (?!exp)  pre not match
# (?<=exp) post match
# (?<!exp) post not match
# regx (?<=<(\w+)>).*(?=<\/\1>) for html tag
# checks to [192.168.32.208]: host [32.208 xuebao] not found
# match [xxx] and [xxx] content.
grep -Po '(?<=\[)[^]]+'
ifconfig | grep -oP '(?<=inet addr:).*(?=  Bcast:)' | xargs -n 4

# awk usage
#   pattern   { action statements }
#   function name(parameter list) { statements }
#   awk '/pattern/ { action }' and '{if($1==pattern) action}' 
ps aux | awk '{if($1=="root") print $(NF-1)}'
#   insert line before match line
sed -i '/        - git branch/i\        - git rev-parse HEAD' file
#   append line after match line
sed -i '/        - git branch/a\        - git rev-parse HEAD' file
#   delete lines between match line.
sed -i '/xxxxxx/,/yyyyyy/d' file

# sed usage
# -i[SUFFIX]: backup extension.
# sed -i 's/100000/500000/' edit-filename

#shopt -s histappend; history -a
#history -c  ;>/root/.bash_history

# redis
#$./redis-cli --latency -h '127.0.0.1' -p '6379'
#$./redis-cli 
#127.0.0.1:6379> info
#127.0.0.1:6379> info memory
#127.0.0.1:6379> slowlog get
#127.0.0.1:6379> config set slowlog-log-slower-than 5000
#127.0.0.1:6379> info clients
#127.0.0.1:6379> config set maxclients 10000
#127.0.0.1:6379> monitor

# rpm usage
# rpm -qa --nosignature | grep elastic  # skip signature query
# rpm -e -vv --nosignature elasticsearch-1.5.2-1  # skip signature uninstall
# cd /var/lib/rpm && rm -rf __db* # rm lock file for rpm no respose.
# rpm -ivh -vv --force --nosignature elasticsearch-1.5.1.rpm

### mac install cocoapods
#pod guides: http://guides.cocoapods.org/
#gem install cocoapods
#pod install --verbose

################## git usage ##################
#git rollback version
#git reset --hard 931c6a6

#look a file edit log for every commit.
#git log -p filename
#
#look a file commit log of every line.
#git blame

## git make patch file and apply patch
#git checkout Fix
#  edit code and commit.
#git format-patch -M master
#
#git patch "git format-patch"
#git am filename.patch

## develop at ansible
#git clone https://github.com/soarpenguin/ansible.git ansible
#cd ansible && git remote add ansible https://github.com/ansible/ansible.git
#git checkout -b bugfix ansible/devel && git pull
#   edit code and commit
#git push origin bugfix:bugfix
#   github pull request
#git clone git recursive.
#   git clone --recursive https://github.com/XiaoMi/open-falcon.git
#   git pull --recurse-submodules
#
#git su
#   git submodule add https://github.com/XiaoMi/open-falcon.git open-falcon
#   git submodule update --init --recursive

#screen -c ~/.screenrc -D -RR screenname
#screen -drUA screenname
# remove and destroy a screen session.
#screen -wipe screenname

#vim use pointed vimrc.
# vim -u ~/vimrc filename

#vim cmd find symble of funcname and display all symble info.
#:cs find s funcname
#:cw

#cat json.txt | python -m json.tool
#python -m SimpleHTTPServer
#python -m py_compile *.py
#python -m compileall dirname
#python -m pdb *.py

#/usr/local/bin/inotifywait -mrq --timefmt %d/%m/%y %H:%M --format %T %w%f -e modify,delete,create,attrib /etc/sysctl.conf
#
#remove redundant zero of 010.105.028.072, get 10.105.28.72
#head ip.txt | perl -F'\.' -alne 'print join ".", map{sprintf "%d",$_}@F'
#
#nohup mesos-slave --master=zk://10.103.11.27:2181,10.103.11.32:2181,10.103.11.33:2181/mesos --log_dir=/opt/mesos-slave/log --work_dir=/opt/mesos-slave/data --appc_store_dir=/opt/mesos-slave/store/appc </dev/null >/dev/null 2>&1 &
#nohup mesos-master --zk=zk://10.103.11.27:2181,10.103.11.32:2181,10.103.11.33:2181/mesos --log_dir=/opt/mesos-master/log --work_dir=/opt/mesos-master/data --no-hostname_lookup --cluster="mesoscluster"  --quorum=2 </dev/null >/dev/null 2>&1 &
